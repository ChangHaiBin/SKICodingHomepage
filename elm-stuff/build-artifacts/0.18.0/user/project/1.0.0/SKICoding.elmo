var _user$project$SKICoding$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$SKICoding$combineResult = function (result) {
	var _p0 = result;
	if (_p0.ctor === 'Err') {
		return _p0._0;
	} else {
		return _p0._0;
	}
};
var _user$project$SKICoding$onKeyDown = function (tagger) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'keydown',
		A2(_elm_lang$core$Json_Decode$map, tagger, _elm_lang$html$Html_Events$keyCode));
};
var _user$project$SKICoding$style10_s = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: A2(_user$project$Style_ops['=>'], 'backgroundColor', '#FFFFFF'),
		_1: {
			ctor: '::',
			_0: A2(_user$project$Style_ops['=>'], 'color', '#000000'),
			_1: {
				ctor: '::',
				_0: A2(_user$project$Style_ops['=>'], 'font-family', 'Arial'),
				_1: {ctor: '[]'}
			}
		}
	});
var _user$project$SKICoding$Model = F3(
	function (a, b, c) {
		return {answer: a, response: b, userInput: c};
	});
var _user$project$SKICoding$KeyDown = function (a) {
	return {ctor: 'KeyDown', _0: a};
};
var _user$project$SKICoding$UpdateUserInput = function (a) {
	return {ctor: 'UpdateUserInput', _0: a};
};
var _user$project$SKICoding$NewGame = function (a) {
	return {ctor: 'NewGame', _0: a};
};
var _user$project$SKICoding$init = {
	ctor: '_Tuple2',
	_0: {answer: 50, response: 'New Game. A number from 1 to 99 was chosen.', userInput: ''},
	_1: A2(
		_elm_lang$core$Random$generate,
		_user$project$SKICoding$NewGame,
		A2(_elm_lang$core$Random$int, 1, 99))
};
var _user$project$SKICoding$CheckAnswer = {ctor: 'CheckAnswer'};
var _user$project$SKICoding$update = F2(
	function (msg, model) {
		var _p1 = msg;
		switch (_p1.ctor) {
			case 'Roll':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: A2(
						_elm_lang$core$Random$generate,
						_user$project$SKICoding$NewGame,
						A2(_elm_lang$core$Random$int, 1, 99))
				};
			case 'NewGame':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{answer: _p1._0, response: 'New Game. A number from 1 to 99 was chosen.'}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'UpdateUserInput':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{userInput: _p1._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'CheckAnswer':
				var response = _user$project$SKICoding$combineResult(
					A2(
						_elm_lang$core$Result$map,
						function (a) {
							return (_elm_lang$core$Native_Utils.cmp(model.answer, a) > 0) ? A2(
								_elm_lang$core$Basics_ops['++'],
								'The correct answer is more than ',
								_elm_lang$core$Basics$toString(a)) : ((_elm_lang$core$Native_Utils.cmp(model.answer, a) < 0) ? A2(
								_elm_lang$core$Basics_ops['++'],
								'The correct answer is less than ',
								_elm_lang$core$Basics$toString(a)) : A2(
								_elm_lang$core$Basics_ops['++'],
								'The correct answer is ',
								A2(
									_elm_lang$core$Basics_ops['++'],
									_elm_lang$core$Basics$toString(a),
									'. You win!')));
						},
						A2(
							_elm_lang$core$Result$andThen,
							function (a) {
								return ((_elm_lang$core$Native_Utils.cmp(a, 1) < 0) || (_elm_lang$core$Native_Utils.cmp(a, 99) > 0)) ? _elm_lang$core$Result$Err('Your input exceeds the range of 1 to 99') : _elm_lang$core$Result$Ok(a);
							},
							A2(
								_elm_lang$core$Result$mapError,
								function (_p2) {
									return 'Your input is not a valid integer.';
								},
								_elm_lang$core$String$toInt(model.userInput)))));
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{response: response}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				return _elm_lang$core$Native_Utils.eq(_p1._0, 13) ? {
					ctor: '_Tuple2',
					_0: model,
					_1: A2(
						_elm_lang$core$Platform_Cmd$map,
						function (_p3) {
							return _user$project$SKICoding$CheckAnswer;
						},
						_elm_lang$core$Platform_Cmd$none)
				} : {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
		}
	});
var _user$project$SKICoding$Roll = {ctor: 'Roll'};
var _user$project$SKICoding$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _user$project$Style$fontSize_percent_s(100),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: A2(_user$project$Style$pad2_s, 50, 0),
					_1: {
						ctor: '::',
						_0: _user$project$SKICoding$style10_s,
						_1: {
							ctor: '::',
							_0: _user$project$Style$center_s,
							_1: {
								ctor: '::',
								_0: _user$project$Style$width_s(100),
								_1: {ctor: '[]'}
							}
						}
					}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _user$project$Style$arial_s,
							_1: {
								ctor: '::',
								_0: _user$project$Style$center_s,
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$style(
										{
											ctor: '::',
											_0: A2(_user$project$Style_ops['=>'], 'clear', 'right'),
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}
							}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$span,
								{
									ctor: '::',
									_0: _user$project$Style$fontSize_percent_s(200),
									_1: {
										ctor: '::',
										_0: A2(_user$project$Style$pad2_s, 16, 0),
										_1: {
											ctor: '::',
											_0: _user$project$Style$bold_s,
											_1: {
												ctor: '::',
												_0: _user$project$Style$maxWidth_s(700),
												_1: {ctor: '[]'}
											}
										}
									}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('Number Guessing Game'),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$p,
									{
										ctor: '::',
										_0: _user$project$Style$fontSize_percent_s(100),
										_1: {
											ctor: '::',
											_0: A2(_user$project$Style$pad2_s, 8, 0),
											_1: {ctor: '[]'}
										}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('Guess a number between 1 to 99'),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$p,
										{ctor: '[]'},
										{
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$input,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$placeholder('Input'),
													_1: {
														ctor: '::',
														_0: _elm_lang$html$Html_Events$onInput(_user$project$SKICoding$UpdateUserInput),
														_1: {
															ctor: '::',
															_0: _elm_lang$html$Html_Attributes$type_('number'),
															_1: {
																ctor: '::',
																_0: _elm_lang$html$Html_Attributes$min('1'),
																_1: {
																	ctor: '::',
																	_0: _elm_lang$html$Html_Attributes$max('99'),
																	_1: {
																		ctor: '::',
																		_0: _user$project$SKICoding$onKeyDown(_user$project$SKICoding$KeyDown),
																		_1: {ctor: '[]'}
																	}
																}
															}
														}
													}
												},
												{ctor: '[]'}),
											_1: {
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$button,
													{
														ctor: '::',
														_0: _elm_lang$html$Html_Events$onClick(_user$project$SKICoding$CheckAnswer),
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: _elm_lang$html$Html$text('GUESS'),
														_1: {ctor: '[]'}
													}),
												_1: {ctor: '[]'}
											}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$p,
											{ctor: '[]'},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text(model.response),
												_1: {ctor: '[]'}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$p,
												{ctor: '[]'},
												{
													ctor: '::',
													_0: A2(
														_elm_lang$html$Html$button,
														{
															ctor: '::',
															_0: _elm_lang$html$Html_Events$onClick(_user$project$SKICoding$Roll),
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: _elm_lang$html$Html$text('NEW GAME'),
															_1: {ctor: '[]'}
														}),
													_1: {ctor: '[]'}
												}),
											_1: {ctor: '[]'}
										}
									}
								}
							}
						}),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		});
};
var _user$project$SKICoding$main = _elm_lang$html$Html$program(
	{init: _user$project$SKICoding$init, view: _user$project$SKICoding$view, update: _user$project$SKICoding$update, subscriptions: _user$project$SKICoding$subscriptions})();
